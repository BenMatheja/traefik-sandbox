version: '3.3'

services:

  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.auth.forward=http://auth:4181"
      - "--entrypoints.teamspeakvoice.address=:9987/udp"
      - "--entrypoints.teamspeakquery.address=:10011"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=info@suchtundordnung.de"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--log.level=DEBUG"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - "443:443"
      - "8080:8080"
      - "9987:9987/udp"
    volumes:
      # So that Traefik can listen to the Docker events
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  auth:
    image: thomseddon/traefik-forward-auth
    environment:
      - PROVIDERS_GOOGLE_CLIENT_ID=your-client-id
      - PROVIDERS_GOOGLE_CLIENT_SECRET=your-client-secret
      - SECRET=something-random
      - INSECURE_COOKIE=true # Example assumes no https, do not use in production
      - DOMAIN=farsity.de
      - AUTH_HOST=auth.farsity.de
    labels:
      - traefik.enable=true
      - traefik.port=4181
      - traefik.backend=auth
      - traefik.frontend.rule=Host:auth.farsity.de
  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    #container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`farsity.de`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
  whoamiapi:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    #container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoamiapi.rule=Host(`api.farsity.de`)"
      - "traefik.http.routers.whoamiapi.entrypoints=websecure"
      - "traefik.http.routers.whoamiapi.tls.certresolver=myresolver"
  whoamiblog:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    #container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoamiblog.rule=Host(`blog.farsity.de`)"
      - "traefik.http.routers.whoamiblog.entrypoints=websecure"
      - "traefik.http.routers.whoamiblog.tls.certresolver=myresolver"
  teamspeak:
    image: teamspeak
    labels:
      - "traefik.enable=true"
      - "traefik.udp.routers.teamspeak.entrypoints=teamspeakvoice"
      - "traefik.tcp.routers.teamspeak.entrypoints=teamspeakquery"
    restart: always
    #ports:
      #- 10011:10011
      #- 30033:30033
    environment:
      TS3SERVER_DB_PLUGIN: ts3db_mariadb
      TS3SERVER_DB_SQLCREATEPATH: create_mariadb
      TS3SERVER_DB_HOST: teamspeakdb
      TS3SERVER_DB_USER: root
      TS3SERVER_DB_PASSWORD: example
      TS3SERVER_DB_NAME: teamspeak
      TS3SERVER_DB_WAITUNTILREADY: 30
      TS3SERVER_LICENSE: accept
  teamspeakdb:
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: teamspeak